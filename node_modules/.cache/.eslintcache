[{"/Users/daniel/Projects/hueboard/src/index.js":"1","/Users/daniel/Projects/hueboard/src/hue.js":"2"},{"size":232,"mtime":1674946618355,"results":"3","hashOfConfig":"4"},{"size":1538,"mtime":1674947963004,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"9"},"17bubnj",{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},"/Users/daniel/Projects/hueboard/src/index.js",[],[],[],"/Users/daniel/Projects/hueboard/src/hue.js",["14","15","16"],[],"\n    import { useState } from 'react';\n\n    const getBridge = () => {\n    fetch('/api/-5aynpcBEYsHNqEcjNPstao7i80FqcBSlo5bqCyj/groups/1', { \n        mode: 'cors',\n        headers: { 'Access-Control-Allow-Origin': '*' }\n    })\n        .then(req => req.json())\n        .then(res => {\n        console.log(res)\n        })\n    }\n\n    const toggleDesk = (body) => {\n    fetch('http://192.168.2.100/api/-5aynpcBEYsHNqEcjNPstao7i80FqcBSlo5bqCyj/lights/10/state', { \n        method: 'PUT',\n        mode: 'cors',\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Headers': '*',\n            'Content-Type': 'application/json'\n            },\n        body: JSON.stringify(body),\n        json: true\n        })\n    }\n\n    const off = {\"transitiontime\":0, \"bri\":255, \"on\": false}\n    const on = {\"transitiontime\":0, \"bri\":255, \"on\": true}\n\n    \n\n\n    export default function App() {\n\n        const [keyPressed, setKeyPressed] = useState(false)\n        toggleDesk(off)\n        function handleKeyPress(e) {\n            let key = e.key\n            console.log('foo')\n            if (keyPressed === false || key == '0') { \n                toggleDesk(on)\n                setKeyPressed(true) \n            }\n            else if (keyPressed === true || key == '0') { \n                toggleDesk(off)\n                setKeyPressed(false) \n            }\n        }\n\n\n\n        return (\n            <div >\n                <input type=\"text\" onKeyPress={(e) => handleKeyPress(e)} />\n            </div>\n        )\n    }",{"ruleId":"17","severity":1,"message":"18","line":4,"column":11,"nodeType":"19","messageId":"20","endLine":4,"endColumn":20},{"ruleId":"21","severity":1,"message":"22","line":42,"column":45,"nodeType":"23","messageId":"24","endLine":42,"endColumn":47},{"ruleId":"21","severity":1,"message":"22","line":46,"column":49,"nodeType":"23","messageId":"24","endLine":46,"endColumn":51},"no-unused-vars","'getBridge' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]